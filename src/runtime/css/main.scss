/* This is very much a hack, but it will have to do for now */

.rounded {
  border-radius: var(--e-rounded-border-radius);
}

.rounded-top {
  border-top-left-radius: var(--e-rounded-border-radius);
  border-top-right-radius: var(--e-rounded-border-radius);
}

.rounded-bottom {
  border-bottom-left-radius: var(--e-rounded-border-radius);
  border-bottom-right-radius: var(--e-rounded-border-radius);
}

body {
  margin: 0px;
}


a {
  color: var(--e-color-primary);
  text-decoration: underline;
  text-underline-offset: 0.2rem;
  text-decoration-thickness: 0.05rem;


  &:visited {
    color: var(--e-color-primary);
  }

  &:active {
    color: var(--e-color-i);
  }

  &:hover {
    text-underline-offset: 0.15rem;
    text-decoration-thickness: 0.1rem;

  }
}

@mixin color-definitions($color-map) {

  :root {
    @each $name, $color in $color-map {
      #{'--e-color-'+$name}: $color;
      #{'--e-color-'+$name+'-rgb'}: red($color), green($color), blue($color);

    }
  }

  @each $name, $color in $color-map {
    .bg-#{$name} {
      background: $color;

      @if (color.lightness($color) > 49%) {
        color: map.get($root-colors-light, "text");
      }

      @else {
        color: map.get($root-colors-dark, "text");
      }
    }

    .color-#{$name} {
      color: $color;
    }
  }
}

@mixin elev($lightness, $light, $color-map) {

  $source: hsl($root-hue, 15%, $lightness);
  $source-i: color.change($source, $saturation: 20%);

  $full: 0;
  $factor: 1;

  @if $light ==1 {
    $full: 100;
    $factor: -1;
  }

  $color-map: map.set($color-map, "i-depressed", color.adjust($source-i, $lightness: -2.5%));
  $color-map: map.set($color-map, "i-depressed-2", color.adjust($source-i, $lightness: -7.5%));
  $color-map: map.set($color-map, "i-depressed-active", color.adjust($source-i, $lightness: -5%, $saturation: 2%));


  $color-map: map.set($color-map, "i-inactive", color.adjust($source-i, $lightness: 10%));
  $color-map: map.set($color-map, "i", color.adjust($source-i, $lightness: 20%));
  $color-map: map.set($color-map, "i-active", color.change(map.get($color-map, "primary"), $lightness: 30%));

  $color-map: map.set($color-map, "i-outline", color.change($source-i, $lightness: $full + $factor*30%, $saturation: 20%));

  $color-map: map.set($color-map, "bg", color.adjust($source, $lightness: -2%));
  $color-map: map.set($color-map, "fg", color.adjust($source, $lightness: 2%));


  $color-map: map.set($color-map, "elev", color.scale($source, $lightness: $lightness));
  $color-map: map.set($color-map, "elev-2", color.scale($source, $lightness: $lightness));
  $color-map: map.set($color-map, "elev-3", color.scale($source, $lightness: $lightness));



  $root-elev: color.scale($source, $lightness: $lightness);
  $root-elev-2: color.scale($source, $lightness: $lightness);
  $root-elev-3: color.scale($source, $lightness: $lightness);

  @include color-definitions($color-map);

}

:root {
  color-scheme: light;
}

@include elev(83%, 1, $root-colors-light);


@media (prefers-color-scheme: dark) {
  :root {
    color-scheme: dark;
  }

  @include elev(15%, 0, $root-colors-dark);


}